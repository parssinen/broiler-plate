version: 2
jobs:
  backend:
    docker:
      # specify the version you desire here
      - image: circleci/node:10
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
      - image: hasura/graphql-engine:v1.0.0-rc.1
        environment:
          HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:@localhost:5432/postgres

    working_directory: ~/repo/backend

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "backend/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: boot up postgresql
          command: docker run -d -p 5432:5432 postgres

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: boot up hasura
          command: docker run -d -p 8080:8080 -e HASURA_GRAPHQL_DATABASE_URL=postgres://postgres:@localhost:5432/postgres hasura/graphql-engine

      - run:
          name: Configure backend
          command: |
            cp backend/config/default.example.json backend/config/default.json
            sed -i 's/"myprivatekey",/"${HASURA_GRAPHQL_ADMIN_SECRET}",/g' backend/config/default.json

      - run:
          name: Install packages for backend
          command: |
            cd backend
            npm install
      - save_cache:
          paths:
            - backend/node_modules
          key: v1-dependencies-{{ checksum "backend/package.json" }}

      # run tests!
      - run:
          name: Test backend
          command: |
            cd backend
            npm test
  frontend:
    docker:
      - image: circleci/node:10

    working_directory: ~/repo/frontend

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-deps-{{ checksum "frontend/package.json" }}
            - v1-deps-

      - run:
          name: Install packages for frontend
          command: |
            cd frontend
            npm install
      - save_cache:
          paths:
            - frontend/node_modules
          key: v1-deps-{{ checksum "frontend/package.json" }}

      - run:
          name: Build frontend
          command: |
            cd frontend
            npm build
workflows:
  version: 2
  build-and-test:
    jobs:
      - backend
      - frontend
