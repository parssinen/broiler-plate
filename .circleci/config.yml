version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "backend/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install packages for backend
          command: |
            cd backend
            npm install

      - save_cache:
          paths:
            - backend/node_modules
          key: v1-dependencies-{{ checksum "backend/package.json" }}

      # run tests!
      - run:
          name: Configure environment for testing
          command: |
            export PRIVATE_KEY=myadminsecretkeymyadminsecretkeymyadminsecretkey
            export GRAPHQL_URL=http://localhost:8080/v1/graphql

      - restore_cache:
          keys:
            - v1-deps-{{ checksum "frontend/package.json" }}
            - v1-deps-

      - run:
          name: Install packages for frontend
          command: |
            cd frontend
            npm install

      - save_cache:
          paths:
            - frontend/node_modules
          key: v1-deps-{{ checksum "frontend/package.json" }}

      - run:
          name: Build frontend
          command: |
            cd frontend
            npm run build

  test:
    docker:
      # specify the version you desire here
      - image: circleci/node:10
      - image: postgres
      - image: hasura/graphql-engine:v1.0.0-rc.1
        name: hasura

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Install cross-env
          command: sudo npm install --global cross-env

      - run:
          name: Install backend packages
          command: |
            cd backend
            npm i

      - run:
          name: Install frontend packages
          command: |
            cd frontend
            npm i

      - run:
          name: Test backend
          command: |
            cd backend
            npm run test

      - run:
          name: Test frontend
          command: |
            cd frontend
            npm run test

workflows:
  version: 2
  back-front:
    jobs:
      - build
      - test:
          requires:
            - build
